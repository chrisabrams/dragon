{"version":3,"sources":["../../../src/dragon/models/store.js"],"names":["Store","options","uid","uniqueId","eventEmitter","emit","emitEvent","bind","on","addListener","once","addOnceListener","off","removeListener","name","o","JSON","parse","localStorage","getItem","e","val","setItem","prototype","mixin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;IAMMA,K;AAEJ,mBAA0B;AAAA,QAAdC,OAAc,yDAAJ,EAAI;AAAA;;AACxB,SAAKC,GAAL,GAAW,gBAAMC,QAAN,CAAe,IAAf,CAAX;;AAEA;AACA,QAAIC,eAAe,sBAAnB;;AAEA,SAAKC,IAAL,GAAaD,aAAaE,SAAb,CAAuBC,IAAvB,CAA4BH,YAA5B,CAAb;AACA,SAAKI,EAAL,GAAaJ,aAAaK,WAAb,CAAyBF,IAAzB,CAA8BH,YAA9B,CAAb;AACA,SAAKM,IAAL,GAAaN,aAAaO,eAAb,CAA6BJ,IAA7B,CAAkCH,YAAlC,CAAb;AACA,SAAKQ,GAAL,GAAaR,aAAaS,cAAb,CAA4BN,IAA5B,CAAiCH,YAAjC,CAAb;;AAEA,SAAKH,OAAL,GAAeA,OAAf;;AAEA,SAAKa,IAAL,GAAeb,QAAQa,IAAvB;AACD;;;;0BAEK;AACJ,UAAIC,IAAI,EAAR;AACA,UAAI;AACFA,YAAIC,KAAKC,KAAL,CAAWC,aAAaC,OAAb,CAAqB,KAAKL,IAA1B,CAAX,CAAJ;AACD,OAFD,CAGA,OAAMM,CAAN,EAAS,CAAE;;AAEX,aAAOL,CAAP;AACD;;;wBAEGM,G,EAAmB;AAAA,UAAdpB,OAAc,yDAAJ,EAAI;;AACrBiB,mBAAaI,OAAb,CAAqB,KAAKR,IAA1B,EAAgC,yBAAeO,GAAf,CAAhC;;AAEA,WAAKhB,IAAL,CAAU,QAAV,EAAoB,KAAKS,IAAzB;AACD;;;KA/CH;;;;;;;AAmDA,sBAAcd,MAAMuB,SAApB,EAA+B,EAACC,sBAAD,EAA/B;;kBAEexB,K","file":"store.js","sourcesContent":["/**\n * Module Dependencies\n *\n * @ignore\n */\nimport EventEmitter from '../events'\nimport mixin        from '../mixin'\nimport utils        from '../utils'\n\n/**\n * Store Class\n *\n * @public\n * @class Store\n */\nclass Store {\n\n  constructor(options = {}) {\n    this.uid = utils.uniqueId(this)\n\n    // TODO: figure out how to mixin this\n    var eventEmitter = new EventEmitter()\n\n    this.emit  = eventEmitter.emitEvent.bind(eventEmitter)\n    this.on    = eventEmitter.addListener.bind(eventEmitter)\n    this.once  = eventEmitter.addOnceListener.bind(eventEmitter)\n    this.off   = eventEmitter.removeListener.bind(eventEmitter)\n\n    this.options = options\n\n    this.name    = options.name\n  }\n\n  get() {\n    var o = {}\n    try {\n      o = JSON.parse(localStorage.getItem(this.name))\n    }\n    catch(e) {}\n\n    return o\n  }\n\n  set(val, options = {}) {\n    localStorage.setItem(this.name, JSON.stringify(val))\n\n    this.emit('change', this.name)\n  }\n\n}\n\nObject.assign(Store.prototype, {mixin})\n\nexport default Store\n"]}