{"version":3,"sources":["../../../src/dragon/collections/index.js"],"names":["Collection","entries","options","uid","uniqueId","eventEmitter","emit","emitEvent","bind","on","addListener","once","addOnceListener","off","removeListener","disposed","Model","models","url","Function","Error","ensureEntries","length","at","entry","model","collection","push","id","index","existingModel","filter","item","i","attr","storeAutoLoad","splice","data","forEach","getData","fromIndex","toIndex","changeEvent","map","toJSON","collectionsModels","next","done","value","dispose","prototype","mixin","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n\n/**\n * Module Dependencies\n *\n * @ignore\n */\nimport EventEmitter from '../events'\nimport mixin        from '../mixin'\nimport Model        from '../models/index'\nimport utils        from '../utils'\n\n/**\n * Collection Class\n *\n * @public\n * @class Collection\n */\nclass Collection {\n\n  /**\n   * Collection constructor\n   *\n   * @public\n   * @constructor\n   * @param {Array} entries\n   * @param {Object} options\n   */\n  constructor(entries = [], options = {}) {\n    this.uid = utils.uniqueId(this)\n\n    // TODO: figure out how to mixin this\n    var eventEmitter = new EventEmitter()\n\n    this.emit  = eventEmitter.emitEvent.bind(eventEmitter)\n    this.on    = eventEmitter.addListener.bind(eventEmitter)\n    this.once  = eventEmitter.addOnceListener.bind(eventEmitter)\n    this.off   = eventEmitter.removeListener.bind(eventEmitter)\n\n    this.disposed = false\n    this.Model    = options.Model || Model\n    this.models   = []\n    this.options  = options\n    this.url      = options.url || this.url || ''\n\n    if(!this.Model || !(this.Model instanceof Function)) {\n      throw new Error('Collection requires a valid Model Class')\n    }\n\n    if(typeof this.url != 'string') {\n      throw new Error('Collection requires a valid url')\n    }\n\n    this.ensureEntries(entries)\n  }\n\n  add(entries, options = {}) {\n    this.ensureEntries(entries, options)\n  }\n\n  clear() {\n    this.models = []\n  }\n\n  /*\n  TODO: Clean this up, make checks stronger\n  Currently, a mixed array of objects and models could be passed; it's an odd scenario that would cause that to hapen thoug.\n  Tecnnically a model instance of a different model could be passed; need to check and prevent that.\n  Should also consider concatting arrays as pushing arrays of 1000 or more can be very time consuming/lots of looping.\n  Overall this function sucks but helps move the project forward atm.\n  */\n\n  ensureEntries(entries, options = {}) {\n\n    /*\n    TODO: figure out how to clean this up\n    */\n    if(\n      typeof entries == 'null' ||\n      typeof entries == 'undefined' ||\n      (!entries.length && typeof entries == 'object' && Object.keys(entries).length == 0)\n    ) return\n\n    // we will suppport all kind of iterable  here !!\n    // It is simpler to manage things by making a single item an array\n    if(!(entries[Symbol.iterator])) {\n      entries = [entries]\n    }\n\n    if(options.at) options.at--\n    for(let entry of entries) {\n      var model = null\n\n      /*\n      TODO: should create a collection that supports multiple types of  models\n      */\n      if(entry instanceof this.Model) {\n        model = entry\n        model.collection = this\n        this.models.push(model)\n      }\n\n      else {\n\n        /*\n        TODO:\n        somehow the first item in this.models gets duplicated to the end, and then new items that were added are added :/\n        */\n        // If collection has entry, merge the results\n        if(entry.id) {\n\n          var index = null\n          var existingModel = this.models.filter( (item, i) => {\n            if(item.attr.id == entry.id) {\n              index = i\n              return item\n            }\n          })\n\n          if(existingModel.length > 0 && index) {\n            model = Object.assign(this.models[index], entry)\n          }\n        }\n\n        // Create a new entry\n        if(!model) {\n          model = new this.Model(entry, {storeAutoLoad: false})\n\n          if(options.at) {\n            options.at++\n            this.models.splice(options.at, 0, entry)\n            //this.models.splice.apply(this.models, [optoins.at, 0].concat([model]))\n          }\n\n          else {\n            model.collection = this\n            this.models.push(model)\n          }\n\n        }\n\n      }\n\n      this.emit('change', model, this.models.length - 1)\n    }\n\n  }\n\n  /*\n  TODO: not really sure what to call this function\n  */\n  getData() {\n    var data = []\n\n    this.models.forEach( (model) => {\n      data.push(model.getData())\n    })\n\n    return data\n  }\n\n  move(fromIndex, toIndex, options = {}) {\n    this.models.splice(toIndex, 0, this.models.splice(fromIndex, 1)[0])\n  }\n\n  remove(index, options = {}) {\n    var changeEvent = (typeof options.changeEvent == 'boolean') ? options.changeEvent : true\n\n    this.models.splice(index, 1)\n\n    if(changeEvent) {\n      this.emit('change')\n      this.emit('removed')\n    }\n  }\n\n  toJSON() {\n    return this.models.map( (model) => model.toJSON())\n  }\n\n  [Symbol.iterator](){\n    var collectionsModels = this.models,\n        index = 0\n\n    return {\n      next: function next () {\n        if (index + 1 > collectionsModels.length) {\n          return { done: true };\n        }\n        return { value: collectionsModels[index++], done: false };\n      }\n    }\n  }\n\n  /**\n   * Dispose of the application\n   *\n   * @example\n   *   application.dispose()\n   *\n   * @public\n   */\n  dispose() {\n\n    if(!this.disposed) {\n\n      utils.dispose(this)\n\n    }\n\n  }\n\n}\n\nObject.assign(Collection.prototype, {mixin})\n\nmodule.exports = Collection\n"]}