{"version":3,"sources":["../../../src/dragon/views/index.js"],"names":["stardux","require","isNodeList","nodes","stringRepr","Object","prototype","toString","call","test","length","nodeType","View","options","uid","uniqueId","eventEmitter","emit","emitEvent","bind","on","evt","listener","addListener","once","addOnceListener","off","removeListener","attached","attachOnInit","attachPlacement","bindDataOnInit","disposed","renderOnInit","_events","_listeners","_partials","_views","assignOptions","ensureContainer","idom","attach","model","models","collection","collections","bindDataOnChange","render","partials","forEach","key","partial","option","directOptions","indexOf","Array","$container","placement","el","e","console","error","onAddedToDOM","arguments","Error","constructor","name","action","handler","$selector","selector","addEventListener","item","reducer","_childContainers","$el","$","_this","document","querySelectorAll","$ref","handlerWrap","t","target","matches","index","tagName","c","parentNode","childNodes","i","l","push","detached","container","identifier","toLowerCase","id","className","replace","els","removeChild","unBindEvents","unBindListens","view","dispose","detach","Node","createElement","class","_event","apply","origHandler","keyCode","preventDefault","bindEvent","template","innerHTML","firstElementChild","pkg","j","attr","k","getData","ev","html","bindEvents","getIDOMData","update","refreshIDOM","ensureElement","getTemplate","attributes","firstChild","ignore","value","splitClassName","split","allowedOptions","current","removeAction","removeSelector","$removeSelector","removeEventListener","mixin","doc","global","window"],"mappings":"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","file":"index.js","sourcesContent":["'use strict'\n\n/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {createContainer}  from 'f12-stardux'\nimport {Parser, Template} from 'f12-starplate'\nimport EventEmitter       from '../events'\nimport mixin              from '../mixin'\nimport utils              from '../utils'\n\nvar stardux = require('f12-stardux')\n\n// Thanks: http://stackoverflow.com/questions/7238177/detect-htmlcollection-nodelist-in-javascript\nfunction isNodeList(nodes) {\n  var stringRepr = Object.prototype.toString.call(nodes)\n\n  return typeof nodes === 'object' &&\n    /^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(stringRepr) &&\n    (typeof nodes.length === 'number') &&\n    (nodes.length === 0 || (typeof nodes[0] === \"object\" && nodes[0].nodeType > 0))\n}\n\n/**\n * View Class\n *\n * @public\n * @class View\n */\nclass View {\n\n  /**\n   * View constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options\n   */\n  constructor(options = {}) {\n\n    /**\n     * View UID\n     *\n     * @private\n     * @type {String}\n     */\n    this.uid = utils.uniqueId(this)\n\n    // TODO: figure out how to mixin this\n    var eventEmitter = new EventEmitter()\n\n    /**\n     * Event Emitter's emit method.\n     * @type {Function}\n     * @extend {EventEmitter}\n     */\n    this.emit  = eventEmitter.emitEvent.bind(eventEmitter)\n    /**\n     * Event Emitter's on method.\n     * @type {Function}\n     * @extend {EventEmitter}\n     */\n    this.on    = (evt, listener) => {\n      eventEmitter.addListener.call(eventEmitter, evt, listener.bind(this))\n    }\n    /**\n     * Event Emitter's once method.\n     * @type {Function}\n     * @extend {EventEmitter}\n     */\n     this.once  = (evt, listener) => {\n       eventEmitter.addOnceListener.call(eventEmitter, evt, listener.bind(this))\n     }\n    /**\n     * Event Emitter's off method.\n     * @type {Function}\n     * @extend {EventEmitter}\n     */\n    this.off   = eventEmitter.removeListener.bind(eventEmitter)\n\n    /**\n     * Whether the view attached to the DOM\n     * @type {Boolean}\n     * @private\n     */\n    this.attached = false\n\n    /**\n     * Whether to attach the view on initialization\n     * @type {Boolean}\n     */\n    this.attachOnInit = true\n\n    /**\n     * Determines where the view is attached into the container\n     * @type {String}\n     */\n    this.attachPlacement = 'after'\n\n    /**\n     * Whether to bind data from Incremental DOM to the view on initialization.\n     * @type {Boolean}\n     */\n    this.bindDataOnInit = true\n\n    /**\n     * Whether the view has been disposed of.\n     * @type {Boolean}\n     * @private\n     */\n    this.disposed = false\n\n    /**\n     * Whether to render the view's template(s) on initialization\n     * @type {Boolean}\n     */\n    this.renderOnInit = true\n\n    //this._childContainers = {}\n    /**\n     * Events attached to the view\n     * @type {Array}\n     * @private\n     */\n    this._events    = []\n    /**\n     * Listeners attached to the view\n     * @type {Array}\n     * @private\n     */\n    this._listeners = []\n    /**\n     * Partial templates available to use in the reducer\n     * @type {Object}\n     * @private\n     */\n    this._partials  = {}\n    /**\n     * Sub views attached to the view\n     * @type {Object}\n     * @private\n     */\n    this._views     = {}\n\n    this.assignOptions(options)\n\n    //this.setProperties()\n\n    //this.ensureElement()\n    this.ensureContainer()\n\n    if(this.options.idom instanceof createContainer) {\n      //this.$container =\n      //TODO: figure out how to get $container from an already created container\n      this.idom = this.options.idom\n      this.attached = true // Since the idom container is being passed in, we assume it's been attached (although I guess its possible it hasn't been)\n    }\n\n    if(!this.attached && this.attachOnInit) {\n\n      this.once('render', () => {\n\n        this.attach()\n\n      })\n\n    }\n\n    if(this.bindDataOnInit && (\n      this.model ||\n      this.models ||\n      this.collection ||\n      this.collections\n    )) {\n      this.bindDataOnChange()\n    }\n\n    if(this.renderOnInit) this.render()\n\n  }\n\n  addedToDOM() {\n    // Intended to be over-written\n  }\n\n  /*\n  @method attach\n  @type Function\n  @return this\n  @desc Attaches the view to the DOM\n  */\n\n  assignOptions(options = {}) {\n\n    // Object.assign is used so that options passed into parent constructor are not lost when child is disposed\n    this.options = Object.assign({}, options)\n\n    if(this.options.partials) {\n\n      Object.keys(this.options.partials).forEach( (key) => {\n        this.partial(key, this.options.partials[key])\n      })\n      //delete this.options.partials\n    }\n\n    Object.keys(this.options).forEach( (option) => {\n\n      if(this.directOptions && this.directOptions.indexOf(option) > -1) {\n\n        this[option] = options[option]\n\n      }\n\n      else {\n\n        this.options[option] = options[option]\n\n      }\n\n    })\n\n  }\n\n  attach() {\n\n    try {\n\n      /*\n      Can't use .forEach() on NodeLists\n      Tempting to use NodeList.prototype.forEach = Array.prototype.forEach but that's a no no\n      See for basic info: https://developer.mozilla.org/en-US/docs/Web/API/NodeList\n      See this guy (which I ignore) for a super long list of reasons: http://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/\n      */\n\n      Array.prototype.forEach.call(this.$container, ($container) => {\n\n        var placement;\n\n        switch(this.attachPlacement) {\n\n          // Attach before all other children in container\n          case 'first'   : $container['prependChild'](this.el); break;\n          case 'prepend' : $container['prependChild'](this.el); break;\n\n          // Attach normally, after all children in container\n          default: $container['appendChild'](this.el)\n\n        }\n\n      })\n\n    }\n\n    catch(e) {\n\n      console.error(e)\n\n    }\n\n    /*if(!this.$el) {\n      this.setElement()\n    }*/\n\n    this.attached = true\n\n    this.emit('addedToDOM')\n    if(this.onAddedToDOM) this.onAddedToDOM()\n\n    return this\n\n  }\n\n  bindDataOnChange() {\n\n    if(this.model && this.model.on)           this.model.on('change', this.render.bind(this))\n    if(this.collection && this.collection.on) this.collection.on('change', this.render.bind(this))\n\n    if(this.models) {\n      Object.keys(this.models).forEach( (key) => {\n        this.models[key].on('change', () => {\n          this.render.call(this)\n        })\n      })\n    }\n\n    if(this.collections) {\n      Object.keys(this.collections).forEach( (key) => {\n        this.collections[key].on('change', () => {\n          this.render.call(this)\n        })\n      })\n    }\n\n  }\n\n  bindEvent() {\n\n    if(typeof arguments[2] == 'undefined') throw new Error(`Event \"${arguments[0]}\" on ${this.constructor.name} requires callback`)\n\n    var action  = arguments[0],\n        handler = arguments[arguments.length - 1].bind(this)\n\n    switch(arguments.length) {\n\n      case 3:\n\n        var $selector = arguments[1]\n\n        Array.prototype.forEach.call($selector, (selector) => {\n\n          selector.addEventListener(action, handler, false)\n\n        })\n\n        break;\n\n      default:\n\n    }\n\n  }\n\n  bindEvents() {\n\n    this._events.forEach( (item) => {\n\n      var action    = item[0],\n          $selector = item[1], // TODO: scope this locally\n          listener  = item[2]\n\n      Array.prototype.forEach.call($selector, (selector) => {\n\n        selector.addEventListener(action, listener, false)\n\n      })\n\n    })\n\n  }\n\n  childContainer(name, selector, reducer) {\n\n    if(!selector) {\n      return this._childContainers[name]\n    }\n\n    var $el = this.$(selector)\n    if($el) {\n      this._childContainers[name] = createContainer($el, {}, reducer)\n    }\n\n  }\n\n  /*bindListens() {\n\n    this.listen.forEach( (item) => {\n\n      var eventName = item[0],\n          handler   = item[1]\n\n      this.on(eventName, handler)\n\n    })\n\n  }*/\n\n  delegateEvent(action, $el, selector, handler) {\n    var _this = this\n\n    if(typeof $el == 'string') $el = document.querySelectorAll($el)\n\n    if(typeof $el == 'object' && $el.$ref) {\n      $el = $el.$ref\n    }\n\n    if(typeof selector == 'object' && selector.selector) {\n      selector = selector.selector\n    }\n\n    var handlerWrap = function(e) {\n      var t = e.target\n      while (t && t !== this) {\n        if (t.matches(selector)) {\n          var index = null\n\n          if(t.tagName == 'LI') {\n            var c = t.parentNode.childNodes\n            for(var i = 0, l = c.length; i < l; i++) {\n              if(c[i] == t) {\n                index = i\n                break\n              }\n            }\n          }\n\n          handler.call(_this, e, index)\n        }\n        t = t.parentNode\n      }\n    }\n\n    this._events.push([action, $el, handlerWrap])\n\n    Array.prototype.forEach.call($el, (el) => {\n\n      el.addEventListener(action, handlerWrap)\n\n    })\n\n  }\n\n  /*\n  @method detach\n  @type Function\n  @desc Detachs the view from the DOM\n  */\n  detach() {\n    //console.log(\"DEBUG: Detaching: Container\", this.$container)\n    //console.log(\"DEBUG: Detaching: El\", this.$el)\n\n    if(this.detached) {\n      console.error('Cannot detach view as it has already been detached')\n      return\n    }\n\n    /*\n    TODO:\n    This is a weird error; if you put a return here, then it will not detach, but the error makes it sound like there is no DOM node to detach.\n    */\n    if(!this.$container) {\n\n      console.error('DEBUG: Detach Error: this.$container is not defined')\n      //return\n    }\n\n    Array.prototype.forEach.call(this.$container, (container) => {\n\n      /*\n      TODO: not happy with this\n      */\n      var identifier = this.el.tagName.toLowerCase()\n      if(this.el.id) {\n        identifier = `#${this.el.id}`\n      }\n      else if(this.el.className) {\n        identifier = '.' + this.el.className.replace(' ', ' .')\n      }\n\n      var els = container.querySelectorAll(identifier)\n\n      Array.prototype.forEach.call(els, (el) => {\n\n        container.removeChild(el)\n\n      })\n\n    })\n\n    this.detached = true\n    this.emit('detach')\n\n    /*Array.prototype.forEach.call(this.$el, function(el) {\n\n      container.removeChild\n\n      // I've always thought this is a funny way to remove Nodes from the DOM :O\n      console.log(\"el\", el)\n\n      console.log(\"parent\", el.parentNode)\n\n      //TODO: Fix the angryness from multiple copies of same ID - yes the developer *shouldnt* do that, but this should still communicate that instead of just freaking out\n\n      el.parentNode.removeChild(el)\n\n    })*/\n\n  }\n\n  /*\n  @method detach\n  @type Function\n  @desc Completely disposes of the view, any sub views, it's DOM, events, etc.\n  */\n  dispose() {\n\n    if(!this.disposed) {\n\n      this.unBindEvents()\n      this.unBindListens()\n\n      Object.keys(this._views).forEach( (key) => {\n        var view = this._views[key]\n        view.dispose()\n      })\n\n      this.on('detach', () => {\n        utils.dispose(this)\n      })\n\n      this.detach()\n    }\n\n  }\n\n  ensureContainer() {\n\n    if(this.container) {\n\n      if(this.container instanceof Node) {\n        this.$container = [this.container]\n      }\n\n      else if(typeof this.container == 'string') {\n        this.$container = this.$(this.container)\n      }\n\n    }\n\n    if(this.renderOnInit) {\n      if(!this.container || !this.$container || this.$container.length == 0) console.error('No container(s) found.', this, this.container)\n    }\n\n  }\n\n  ensureElement() {\n\n    // We need a wrapping tag; it's too dangerous to patch a template without one\n    if(!this.tagName) this.tagName = 'div'\n\n    this.el = document.createElement(this.tagName)\n\n    if(this.id) this.el.id = this.id\n    if(this.class) this.el.className = this.class\n\n  }\n\n  event() {\n\n    if(!this.attached) {\n      this.on('addedToDOM', () => {\n\n        this._event.apply(this, arguments)\n\n      })\n    }\n\n    else {\n      this._event.apply(this, arguments)\n    }\n\n  }\n\n  _event(action) {\n\n    var handler = arguments[arguments.length - 1],\n        origHandler = arguments[arguments.length - 1],\n        selector,\n        _this   = this\n\n    switch(arguments.length) {\n\n      case 2:\n\n        selector = this.el\n\n        break\n\n      case 3:\n\n        selector = arguments[1]\n\n        break\n\n      default:\n\n    }\n\n    if(typeof selector == 'string') selector = this.$(selector)\n\n    if(typeof selector == 'object' && selector.$ref) {\n      selector = selector.$ref\n    }\n\n    switch(action) {\n\n      case 'enter':\n\n        action = 'keydown'\n\n        handler = function(e) {\n\n          if(e.keyCode == 13) {\n            e.preventDefault()\n            origHandler.call(_this, e)\n          }\n\n        }\n\n        break\n\n      default:\n\n    }\n\n    this._events.push([action, selector, handler])\n\n    if(this.attached) {\n      this.bindEvent(action, selector, handler)\n    }\n\n    else {\n      this.on('addedToDOM', () => {\n        this.bindEvent(action, selector, handler)\n      })\n    }\n\n  }\n\n  getTagName(template) {\n\n    var el = document.createElement('div')\n    el.innerHTML = template\n\n    return el.firstElementChild.tagName.toLowerCase()\n\n  }\n\n  /*\n  @method getTemplate\n  @type Function\n  @returns String\n  @desc Gets the template for the view\n\n  @notes This function can do whatever the developer desires. Mixins, such as Handlebars Mixin, will take overwrite this. The developer should feel comfortable overwriting this.\n  */\n  getTemplate() {\n\n    return this.template\n\n  }\n\n  getIDOMData() {\n\n    var pkg = {}\n\n    // Property naming ensues\n    if(this.models || this.collections) {\n\n      if(this.models) {\n        for(var j in this.models) {\n          pkg[j] = this.models[j].attr\n        }\n      }\n\n      if(this.collections) {\n        for(var k in this.collections) {\n          pkg[k] = this.collections[k].getData()\n        }\n      }\n\n    }\n\n    // Classic Backbone\n    else {\n\n      if(this.model) {\n        pkg = Object.assign({}, this.model.attr)\n      }\n\n      else if(this.collection) {\n        pkg = Object.assign({}, {collection: this.collection.getData()})\n      }\n\n    }\n\n    return pkg\n\n  }\n\n  listen() {\n\n    var ev      = arguments[0],\n        handler = arguments[1]\n\n    switch(arguments.length) {\n\n      case 2:\n\n        this.on(ev, handler.bind(this))\n\n        break;\n\n      default:\n\n    }\n\n    this._listeners.push(ev, handler)\n\n  }\n\n  partial(name, html) {\n    if(html) {\n      this._partials[name] = new Template(html)\n    }\n\n    return this._partials[name]\n  }\n\n  rebindEvents() {\n\n    this.unBindEvents()\n    this.bindEvents()\n\n  }\n\n  refreshIDOM() {\n    var pkg = this.getIDOMData()\n\n    this.idom.update(Object.assign({}, pkg))\n  }\n\n  /*\n  @method render\n  @type Function\n  @return this\n  @desc Renders the view\n  */\n\n  render() {\n\n    /*\n    TODO: Debug incremental dom and see if it is firing more times than\n    necessary\n    */\n    //console.log('render called', this.attached, this.id)\n    /*\n    TODO: really both should exist, but gotta figure out how to get container from existing idom passed in\n    */\n    if(!this.container && !this.idom) {\n      console.error('Container type not valid.', this.uid)\n      return this\n    }\n\n    /*\n    Remember with Backbone you would call .render() to update the template?\n    If the template has been attached, then update the template with Incremental DOM\n    */\n    if(this.attached) {\n      this.refreshIDOM()\n      this.emit('render')\n      //console.log('DEBUG: am i already attached?', this.constructor.name)\n      return this\n    }\n\n    /*\n    TODO: What is going on that is re-defining el? Is it a race condition with\n    an update the container, which triggers multiple updates within milliseconds?\n\n    If this.el is attempted to be re-assigned, an error will be thrown about not\n    re-assigning a read-only property.\n    */\n    if(this.el) {\n      //console.log('DEBUG: el is already assigned on', this.constructor.name)\n      return\n    }\n    else {\n      // Ideally this gets called in constructor, but see above\n      this.ensureElement()\n    }\n\n    //var Container = stardux.Container\n    this.idom = createContainer(this.el, {}, this.reducer.bind(this))\n\n    this.el.innerHTML = this.getTemplate()\n\n    this.refreshIDOM()\n\n    this.emit('render')\n\n    return this\n\n  }\n\n  /*\n  @method setAttributes\n  @type Function\n  @returns Void\n  @desc Assigns attributes to view\n\n  @param attributes {Object}\n  */\n\n  setAttributes() {\n\n    this.attributes = {}\n\n    var el = document.createElement('div')\n    el.innerHTML = this.getTemplate()\n\n    if(el.firstChild.id) {\n\n      this.id = el.firstChild.id\n\n    }\n\n    if(el.firstChild.className) {\n\n      this.className = el.firstChild.className\n\n    }\n\n    var ignore = [\n      'class',\n      'id'\n    ]\n\n    Array.from(el.firstChild.attributes).forEach( (item) => {\n\n      // If the attribute is not on the ignore list\n      if(ignore.indexOf(item.name) == -1) {\n        this.attributes[item.name] = item.value\n      }\n\n    })\n\n  }\n\n  setElement() {\n\n    if(this.id) {\n      var id   = `#${this.id}`\n\n      if(!this.el) this.el = id\n      this.$el = this.$(id)\n    }\n\n    else if(this.className) {\n\n      var splitClassName = this.className.split(' ')\n        var className = ''\n\n      for(let i = 0, l = splitClassName.length; i < l; i++) {\n\n        className += `.${splitClassName[i]}`\n\n      }\n\n      if(!this.el) this.el = className\n      this.$el = this.$(className)\n    }\n\n    // TODO: only query within container\n    else {\n      var tagName = this.tagName\n\n      if(!this.el) this.el = tagName\n      this.$el = this.$(tagName)\n    }\n\n  }\n\n  setProperties() {\n\n    var allowedOptions = [\n      'container',\n      'el',\n      'template'\n    ]\n\n    var options = Object.assign(this.options)\n\n    Object.keys(options).forEach( (key) => {\n\n      // If the property is not on the ignore list\n      if(allowedOptions.indexOf(key) > -1) {\n\n        this[key] = options[key]\n        delete this.options[key]\n\n      }\n\n    })\n\n  }\n\n  state(action) {\n    this.idom.update({current: action})\n  }\n\n  unBindEvent(removeAction, removeSelector) {\n    var $removeSelector = document.querySelectorAll(removeSelector)\n\n    this._events.forEach( (item) => {\n\n      var action    = item[0],\n          $selector = item[1],\n          listener  = item[2]\n\n      if(action == removeAction && $selector == $removeSelector) {\n        Array.prototype.forEach.call($selector, (selector) => {\n\n          selector.removeEventListener(action, listener, false)\n\n        })\n      }\n\n    })\n  }\n\n  unBindEvents() {\n\n    this._events.forEach( (item) => {\n\n      var action    = item[0],\n          $selector = item[1], // TODO: scope this locally\n          listener  = item[2]\n\n      Array.prototype.forEach.call($selector, (selector) => {\n\n        selector.removeEventListener(action, listener, false)\n\n      })\n\n    })\n\n    //this._events = []\n\n  }\n\n  unBindListens() {\n\n    this._listeners.forEach( (item) => {\n\n      var ev      = item[0],\n          handler = item[1]\n\n      this.off(ev, handler)\n\n    })\n\n  }\n\n  /*\n  Keep track of sub-views\n  */\n  view(name, view) {\n\n    if(arguments.length == 1) {\n      return this._views[name]\n    } else {\n      this._views[name] = view\n    }\n\n  }\n\n}\n\nObject.assign(View.prototype, {mixin})\n\n/* Developer Notes\nThe following properties & methods are assigned on the prototype to allow for easier overriding.\n*/\n\n/*\n@property $\n@type Object\n@default native\n@desc $ query engine\n*/\n//DragonBaseView.prototype.$ = document.querySelectorAll.bind(document)\nView.prototype.$ = function(selector) {\n\n  var doc = null\n\n  if(typeof global == 'object' && global.document) doc = global.document\n  if(typeof window == 'object' && window.document) doc = window.document\n\n  return doc.querySelectorAll.call(doc, selector)\n\n}\n\n/**\n * Direct Options. Some options are important enough that they should be directly on the view. Also offers consistency for overriding certain properties.\n *\n * @private\n * @const\n * @type {Array}\n */\nView.prototype.directOptions = [\n  'attachOnInit',\n  'attachPlacement',\n  'bindDataOnInit',\n  'class', // why did CSS use this?\n  'collection',\n  'collections',\n  'component',\n  'container',\n  'events',\n  'id',\n  'listen',\n  'mediator',\n  'model',\n  'models',\n  'reducer',\n  'renderOnInit',\n  'tagName',\n  'template',\n  'View'\n]\n\nexport default View\n"]}