{"version":3,"sources":["../../../src/dragon/application/index.js"],"names":["Application","options","uid","uniqueId","disposed","router","routes","console","error","dispatcher","app","getController","on","routeMatchCallback","route","params","dispatch","dispose","start","prototype","mixin"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;IAMMA,W;;AAEJ;;;;;;;AAOA,yBAA0B;AAAA,QAAdC,OAAc,yDAAJ,EAAI;AAAA;;AACxB;;;;;;AAMA,SAAKC,GAAL,GAAW,gBAAMC,QAAN,CAAe,IAAf,CAAX;;AAEA;;;;;;AAMA,SAAKC,QAAL,GAAgB,KAAhB;;AAEA;;;;;;AAMA,SAAKH,OAAL,GAAeA,OAAf;;AAEA,QAAG,CAAC,KAAKA,OAAL,CAAaI,MAAb,CAAoBC,MAAxB,EAAgC,OAAOC,QAAQC,KAAR,CAAc,6BAAd,EAA6C,KAAKP,OAAlD,CAAP;;AAEhC;;;;;;AAMA,SAAKI,MAAL,GAAc,oBAAW;AACvBC,cAAQ,KAAKL,OAAL,CAAaI,MAAb,CAAoBC;AADL,KAAX,CAAd;;AAIA;;;;;;AAMA,QAAIG,aAAa,KAAKA,UAAL,GAAkB,yBAAe;AAChDC,WAAK,IAD2C;AAEhDC,qBAAeV,QAAQQ,UAAR,CAAmBE;AAFc,KAAf,CAAnC;;AAKA,SAAKN,MAAL,CAAYO,EAAZ,CAAe,OAAf,EAAwB,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,MAAnC,EAA2Cd,OAA3C,EAAoD;;AAE1EQ,iBAAWO,QAAX,CAAoBF,KAApB,EAA2BC,MAA3B,EAAmCd,OAAnC;AAED,KAJD;AAMD;;AAED;;;;;;;;;;;;8BAQU;;AAER,UAAG,CAAC,KAAKG,QAAT,EAAmB;;AAEjB,wBAAMa,OAAN,CAAc,IAAd;AAED;AAEF;;AAED;;;;;;;;;;;4BAQQ;;AAEN,WAAKZ,MAAL,CAAYa,KAAZ;AAED;;;;;AAIH,sBAAclB,YAAYmB,SAA1B,EAAqC,EAACC,sBAAD,EAArC;;kBAEepB,W","file":"index.js","sourcesContent":["'use strict'\n\n/**\n * Module Dependencies\n *\n * @ignore\n */\nimport Dispatcher from '../router/dispatcher'\nimport mixin      from '../mixin'\nimport Router     from '../router/index'\nimport utils      from '../utils'\n\n/**\n * Application Class\n *\n * @public\n * @class Application\n */\nclass Application {\n\n  /**\n   * Application constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options\n   */\n  constructor(options = {}) {\n    /**\n     * Application UID\n     *\n     * @private\n     * @type {String}\n     */\n    this.uid = utils.uniqueId(this)\n\n    /**\n     * Disposed\n     *\n     * @private\n     * @type {Object}\n     */\n    this.disposed = false\n\n    /**\n     * Options\n     *\n     * @private\n     * @type {Object}\n     */\n    this.options = options\n\n    if(!this.options.router.routes) return console.error('Application requires routes', this.options)\n\n    /**\n     * Router.\n     *\n     * @private\n     * @type {Object}\n     */\n    this.router = new Router({\n      routes: this.options.router.routes\n    })\n\n    /**\n     * Dispatcher.\n     *\n     * @private\n     * @type {Object}\n     */\n    var dispatcher = this.dispatcher = new Dispatcher({\n      app: this,\n      getController: options.dispatcher.getController\n    })\n\n    this.router.on('match', function routeMatchCallback(route, params, options) {\n\n      dispatcher.dispatch(route, params, options)\n\n    })\n\n  }\n\n  /**\n   * Dispose of the application\n   *\n   * @example\n   *   application.dispose()\n   *\n   * @public\n   */\n  dispose() {\n\n    if(!this.disposed) {\n\n      utils.dispose(this)\n\n    }\n\n  }\n\n  /**\n   * Start the application\n   *\n   * @example\n   *   application.start()\n   *\n   * @public\n   */\n  start() {\n\n    this.router.start()\n\n  }\n\n}\n\nObject.assign(Application.prototype, {mixin})\n\nexport default Application\n"]}