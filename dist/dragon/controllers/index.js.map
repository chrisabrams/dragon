{"version":3,"sources":["../../../src/dragon/controllers/index.js"],"names":["Controller","options","uid","uniqueId","key","Val","arguments","length","composition","update","disposed","dispose","ignoreProperties","prototype"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AACA;;;;;;AAEA;;;;;;IAMMA,U;;AAEJ;;;;;;;AAOA,wBAA0B;AAAA,QAAdC,OAAc,yDAAJ,EAAI;AAAA;;AACxB,SAAKC,GAAL,GAAW,gBAAMC,QAAN,CAAe,IAAf,CAAX;AACD;;;;4BAEOC,G,EAAKC,G,EAAmB;AAAA,UAAdJ,OAAc,yDAAJ,EAAI;;;AAE9B,UAAGK,UAAUC,MAAV,IAAoB,CAApB,IAAyB,sBAAO,uBAAaH,GAAb,CAAP,KAA4B,QAAxD,EAAkE;AAChE,YAAII,cAAc,uBAAaJ,GAAb,CAAlB;;AAEA,eAAOI,WAAP;AACD;;AAED;;;AAGA,UAAG,CAAC,uBAAaJ,GAAb,CAAD,IAAsBH,QAAQQ,MAAjC,EAAyC;;AAEvC,+BAAaL,GAAb,IAAoB,IAAIC,GAAJ,CAAQJ,OAAR,CAApB;AAED;AAEF;;;8BAES;;AAER,UAAG,CAAC,KAAKS,QAAT,EAAmB;;AAEjB,wBAAMC,OAAN,CAAc,IAAd,EAAoB;AAClBC,4BAAkB,CAAC,KAAD;AADA,SAApB;AAID;AAEF;;;;;AAIHZ,WAAWa,SAAX,CAAqBH,QAArB,GAAgC,KAAhC;;kBAEeV,U","file":"index.js","sourcesContent":["'use strict'\n\n/**\n * Module Dependencies\n *\n * @ignore\n */\nimport composeStore from '../lib/composeStore'\nimport utils        from '../utils'\n\n/**\n * Controller Class\n *\n * @public\n * @class Controller\n */\nclass Controller {\n\n  /**\n   * Controller constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options\n   */\n  constructor(options = {}) {\n    this.uid = utils.uniqueId(this)\n  }\n\n  compose(key, Val, options = {}) {\n\n    if(arguments.length == 1 || typeof composeStore[key] == 'object') {\n      var composition = composeStore[key]\n\n      return composition\n    }\n\n    /*\n    TODO: Figure out how updating/replacing a composition would work.\n    */\n    if(!composeStore[key] || options.update) {\n\n      composeStore[key] = new Val(options)\n\n    }\n\n  }\n\n  dispose() {\n\n    if(!this.disposed) {\n\n      utils.dispose(this, {\n        ignoreProperties: ['app']\n      })\n\n    }\n\n  }\n\n}\n\nController.prototype.disposed = false\n\nexport default Controller\n"]}