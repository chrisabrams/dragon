{"version":3,"sources":["../../../src/dragon/router/dispatcher.js"],"names":["Dispatcher","options","uid","uniqueId","disposed","app","currentController","route","params","dispose","req","res","navigate","controller","Controller","action","next","segs","pattern","split","controllerName","actionName","getController","ignoreProperties"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;;;;;AAKA;;;;AACA;;;;;;AAEA;;;;;;IAMMA,U;AAEJ,wBAA0B;AAAA,QAAdC,OAAc,yDAAJ,EAAI;AAAA;;;AAExB,SAAKC,GAAL,GAAW,gBAAMC,QAAN,CAAe,IAAf,CAAX;;AAEA,SAAKC,QAAL,GAAgB,KAAhB;;AAEA,SAAKH,OAAL,GAAeA,OAAf;;AAEA,SAAKI,GAAL,GAAWJ,QAAQI,GAAnB;;AAEA,SAAKC,iBAAL,GAAyB,IAAzB;AAED;;;;6BAEQC,K,EAAOC,M,EAAsB;AAAA,UAAdP,OAAc,yDAAJ,EAAI;;;AAEpC,UAAG,KAAKK,iBAAL,IAA0B,KAAKA,iBAAL,CAAuBG,OAApD,EAA6D;;AAE3D,aAAKH,iBAAL,CAAuBG,OAAvB;AACD;;AAED,UAAIC,MAAM;AACRF,gBAAQA;AADA,OAAV;;AAIA,UAAIG,MAAM;AACRC,kBAAU,gBAAOA;AADT,OAAV;;AAIA,UAAIC,aAAa,IAAjB;;AAEA,UAAGZ,QAAQa,UAAX,EAAuB;AACrBD,qBAAa,IAAIZ,QAAQa,UAAZ,EAAb;AACAD,mBAAWZ,QAAQc,MAAnB,EAA2BL,GAA3B,EAAgCC,GAAhC,EAAqC,KAAKK,IAA1C;AACD,OAHD,MAKK;AACH,YAAIC,OAAOV,MAAMW,OAAN,CAAcC,KAAd,CAAoB,GAApB,CAAX;;AAEA,YAAIC,iBAAiBH,KAAK,CAAL,CAArB;AAAA,YACII,aAAiBpB,QAAQc,MAAR,IAAkBE,KAAK,CAAL,CADvC;;AAGA,YAAIH,aAAa,KAAKb,OAAL,CAAaqB,aAAb,CAA2BF,cAA3B,CAAjB;AACAP,qBAAa,IAAIC,UAAJ,EAAb;;AAEAD,mBAAWQ,UAAX,EAAuBX,GAAvB,EAA4BC,GAA5B,EAAiC,KAAKK,IAAtC;AACD;;AAED,WAAKV,iBAAL,GAAyBO,UAAzB;AAED;;;2BAEM,CAEN;;;8BAES;;AAER,UAAG,CAAC,KAAKT,QAAT,EAAmB;;AAEjB,wBAAMK,OAAN,CAAc,IAAd,EAAoB;AAClBc,4BAAkB,CAAC,KAAD;AADA,SAApB;AAID;AAEF;;;;;kBAIYvB,U","file":"dispatcher.js","sourcesContent":["'use strict'\n\n/**\n * Module Dependencies\n *\n * @ignore\n */\nimport Router from './index'\nimport utils  from '../utils'\n\n/**\n * Dispatcher Class\n *\n * @public\n * @class Dispatcher\n */\nclass Dispatcher {\n\n  constructor(options = {}) {\n\n    this.uid = utils.uniqueId(this)\n\n    this.disposed = false\n\n    this.options = options\n\n    this.app = options.app\n\n    this.currentController = null\n\n  }\n\n  dispatch(route, params, options = {}) {\n\n    if(this.currentController && this.currentController.dispose) {\n\n      this.currentController.dispose()\n    }\n\n    var req = {\n      params: params\n    }\n\n    var res = {\n      navigate: Router.navigate\n    }\n\n    var controller = null\n\n    if(options.Controller) {\n      controller = new options.Controller()\n      controller[options.action](req, res, this.next)\n    }\n\n    else {\n      var segs = route.pattern.split('/')\n\n      var controllerName = segs[1],\n          actionName     = options.action || segs[2]\n\n      var Controller = this.options.getController(controllerName)\n      controller = new Controller()\n\n      controller[actionName](req, res, this.next)\n    }\n\n    this.currentController = controller\n\n  }\n\n  next() {\n\n  }\n\n  dispose() {\n\n    if(!this.disposed) {\n\n      utils.dispose(this, {\n        ignoreProperties: ['app']\n      })\n\n    }\n\n  }\n\n}\n\nexport default Dispatcher\n"]}